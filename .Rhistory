xlab="Región",
font.axis=5,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
tapply(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Macrosector, mean,na.rm = TRUE)
tapply(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Macrosector, mean,na.rm = FALSE)
round(prop.table(table(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Departamento),1),2)
round(prop.table(table(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Departamento),2),2)
round(prop.table(table(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Departamento)),2)
round(prop.table(table(businessDataFrame$Supervisor, businessDataFrame$Departamento),1),2)
round(prop.table(table(businessDataFrame$Supervisor, businessDataFrame$Departamento),2),2)
round(prop.table(table(businessDataFrame$Supervisor, businessDataFrame$Departamento)),2)
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Departamento),1),2)
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Departamento),2),2)
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Departamento)),2)
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Departamento),2),2)
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Region),2),2)
plot(businessDataFrame$Macrosectorh~businessDataFrame$Departamento)
plot(businessDataFrame$Macrosector~businessDataFrame$Departamento)
plot(businessDataFrame$IngresosOperacionales_2018~businessDataFrame$IngresosOperacionales_2017)
businessDataFrame$Ciudad<-factor(businessDataFrame$Ciudad)
display.brewer.all(n=5)#Mostras paletas de tres colores
windows()
plot(businessDataFrame$Macrosector~businessDataFrame$Departamento,
data=businessDataFrame,
col=brewer.pal(4, "BrBG")[businessDataFrame$Ciudad])
legend('topright', legend=levels(businessDataFrame$Ciudad), col=brewer.pal(4, "BrBG"), pch=0)
library("RColorBrewer")
display.brewer.all(n=5)#Mostras paletas de tres colores
windows()
plot(businessDataFrame$Macrosector~businessDataFrame$Departamento,
data=businessDataFrame,
col=brewer.pal(4, "BrBG")[businessDataFrame$Ciudad])
legend('topright', legend=levels(businessDataFrame$Ciudad), col=brewer.pal(4, "BrBG"), pch=0)
sunflowerplot(table(businessDataFrame$Macrosector, businessDataFrame$Region, col="blue")
sunflowerplot(table(businessDataFrame$Macrosector, businessDataFrame$Region, col="blue"))
sunflowerplot(businessDataFrame$Macrosector, businessDataFrame$Region, col="blue")
sunflowerplot(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Region, col="blue")
sunflowerplot(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$Region, col="blue")
stripchart(businessDataFrame$IngresosOperacionales_2018~businessDataFrame$Region, vertical = TRUE, method = "jitter",
pch = 19, add = TRUE, col = 1:length(levels(businessDataFrame$Region)))
boxplot(businessDataFrame$IngresosOperacionales_2018~businessDataFrame$Region, border=c("purple", "blue"))
text(c(1:nlevels(businessDataFrame$Region)), labels=paste("n = ",table(businessDataFrame$Region),sep=""))
iris
sunflowerplot(businessDataFrame$IngresosOperacionales_2018, businessDataFrame$IngresosOperacionales_2017, col="blue")
sunflowerplot(iris$Sepal.Length, iris$Sepal.Width, col="blue")
library(psych)
a<-select(iris,Sepal.Width, Sepal.Length, Petal.Length,Petal.Width )
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
?pairs.panels
a<-select(iris,Sepal.Width, Sepal.Length)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
?pairs.panels
a<-select(iris,Sepal.Width, Sepal.Length)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
?pairs.panels
a<-select(businessDataFrame$IngresosOperacionales_2017, businessDataFrame$IngresosOperacionales_2018)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 2675910000, Alto))
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 2675910000, Alto))
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 2675910000, 'Alto',
ifelse(IngresosOperacionales_2018 > 206676395, 'Medio', 'Bajo')))
businessDataFrame$NumeroDeEmpleados <- sample(500, size = nrow(data), replace = TRUE)
businessDataFrame$NumeroDeEmpleados <- sample(500, size = nrow(businessDataFrame), replace = TRUE)
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 3489742062, 1,
ifelse(IngresosOperacionales_2018 > 1197517403, 2,
ifelse(IngresosOperacionales_2018 > 770577426, 3,
ifelse(IngresosOperacionales_2018 > 200622503, 4, 5)))))
businessDataFrame$NumeroDeEmpleados <- sample(500, size = nrow(businessDataFrame), replace = TRUE)
businessDataFrame$NumeroDeEmpleados <- sample(100,500, size = nrow(businessDataFrame), replace = TRUE)
businessDataFrame$NumeroDeEmpleados <- sample(0>500, size = nrow(businessDataFrame), replace = TRUE)
businessDataFrame$NumeroDeEmpleados <- sample(190>500, size = nrow(businessDataFrame), replace = TRUE)
rm(businessDataFrame$NumeroDeEmpleados)
delete.col(businessDataFrame$NumeroDeEmpleados)
delete.col(businessDataFrame$NumeroDeEmpleados)
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 1001508387, 1,
ifelse(IngresosOperacionales_2018 > 334184383, 2,
ifelse(IngresosOperacionales_2018 > 230046500, 3,
ifelse(IngresosOperacionales_2018 > 150258106, 4)))))
businessDataFrame$NivelDeActivos <- with(businessDataFrame, ifelse(TotalActivos_2018 > 1001095239, 1,
ifelse(TotalActivos_2018 > 300132265, 2,
ifelse(TotalActivos_2018 > 212879841, 3,
ifelse(TotalActivos_2018 > 60003090, 4)))))
businessDataFrame$NivelDeIngresos <- with(businessDataFrame, ifelse(IngresosOperacionales_2018 > 1001508387, 1,
ifelse(IngresosOperacionales_2018 > 334184383, 2,
ifelse(IngresosOperacionales_2018 > 230046500, 3,
ifelse(IngresosOperacionales_2018 > 150258106, 4, 5)))))
businessDataFrame$NivelDeActivos <- with(businessDataFrame, ifelse(TotalActivos_2018 > 1001095239, 1,
ifelse(TotalActivos_2018 > 300132265, 2,
ifelse(TotalActivos_2018 > 212879841, 3,
ifelse(TotalActivos_2018 > 60003090, 4, 5)))))
businessDataFrame$NumeroDeEmpleados <- NULL
sunflowerplot(businessDataFrame$NivelDeActivos, businessDataFrame$NivelDeIngresos, col="blue")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos, col="blue")
a<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos, col="blue")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
seg.col="blue")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
seg.col="blue",
rotate = TRUE)
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05))
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
a<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
plot(businessDataFrame$NivelDeIngresos~businessDataFrame$NivelDeActivos,
data=Data,
col=brewer.pal(4, "BrBG")[businessDataFrame$Region])
legend('topright', legend=levels(businessDataFrame$Region), col=brewer.pal(4, "BrBG"), pch=0)
plot(businessDataFrame$NivelDeIngresos~businessDataFrame$NivelDeActivos,
data=businessDataFrame,
col=brewer.pal(4, "BrBG")[businessDataFrame$Region])
legend('topright', legend=levels(businessDataFrame$Region), col=brewer.pal(4, "BrBG"), pch=0)
require(corrplot)
#library(corrplot)
#corrplot.mixed(corr = cor(iris[,c("Sepal.Width", "Sepal.Length")],
#method = "pearson"))
cor(x = businessDataFrame$NivelDeIngresos, y = businessDataFrame$NivelDeActivos, method = "pearson")
a<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
attach(businessDataFrame)
plot(NivelDeIngresos, NivelDeActivos, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(NivelDeIngresos, NivelDeActivos, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
plot(NivelDeIngresos, NivelDeActivos, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=2)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
plot(NivelDeIngresos, NivelDeActivos, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=3)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
plot(NivelDeIngresos, NivelDeActivos, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
plot(NivelDeIngresos, NivelDeActivos, main="Activos VS Ingresos",
xlab="Nivel de ingresos ", ylab="Nivel de Activos ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
a<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
round(prop.table(table(businessDataFrame$Macrosector, businessDataFrame$Departamento),2),2)
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("topleft", c(labels),
cex = 0.3, fill = rainbow(length(profit)))
# 10 ¿?
summary(NivelDeIngresos)
tapply(IngresosOperacionales_2018, Macrosector, mean,na.rm = TRUE)
round(prop.table(table(Macrosector, Departamento),2),2)
round(prop.table(table(Macrosector, Region),2),2)
round(prop.table(table(Macrosector, Region),2),2)
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
summary(NivelDeActivos)
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
boxplot(NivelDeIngresos~Macrosector, border=c("purple", "blue"))
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=""))
boxplot(NivelDeIngresos~Macrosector, border=c("#01d564", "#ed1c24"))
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=""))
boxplot(NivelDeIngresos~Macrosector, border=c("#01d564", "#ed1c24"))
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=""))
title("Pepito"
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
xlab = "Macrosector",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=""))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=""))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
summary(NivelDeIngresos)
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
plot(NivelDeIngresos, NivelDeActivos, main="Activos VS Ingresos",
xlab="Nivel de ingresos ", ylab="Nivel de Activos ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red") # regression line (y~x)
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue") # lowess line (x,y)
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("topleft", c(labels),
cex = 0.3, fill = rainbow(length(profit)))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1.1,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1.1,
cex.axis=1.5,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1.1,
cex.axis=0.9,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1.1,
cex.axis=0.5,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1,
cex.axis=0.3,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1,
cex.axis=0.4,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
View(businessDataFrame)
---
title: "Report"
author: "Miguel Soler"
date: '2022-11-17'
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
mainMacrosectorProfit_2018 <- profit_2018 %>%
arrange(desc(IngresosOperacionales_2018)) %>%
slice(1:1)
profit_2018 <- sqldf('SELECT Macrosector,IngresosOperacionales_2018
FROM businessDataFrame')
mainMacrosectorProfit_2018 <- profit_2018 %>%
arrange(desc(IngresosOperacionales_2018)) %>%
slice(1:1)
mainMacrosectorProfit_2018
mainMacrosectorProfit_2018
mainMacrosectorProfit_2018
mainMacrosectorProfit_2017
topTenBusiness_2018
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("topleft", c(labels),
cex = 0.3, fill = rainbow(length(profit)))
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("topleft", c(labels),
cex = 0.2, fill = rainbow(length(profit)))
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("topcenter", c(labels),
cex = 0.2, fill = rainbow(length(profit)))
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("top", c(labels),
cex = 0.2, fill = rainbow(length(profit)))
topTenBusiness_2018
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>% group_by(Region) %>%
arrange(desc(IngresosOperacionales_2018)) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>% group_by(Region) %>%
arrange(desc(regionsProfit_2018$IngresosOperacionales_2018)) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
View(regionsProfit_2018)
View(regionsProfit_2018)
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>% group_by(Region) %>%
arrange(desc(IngresosOperacionales_2018)) %>%
summarise(Profit = sum(IngresosOperacionales_2018))
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
arrange(desc(IngresosOperacionales_2018)) %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
arrange(desc(profit)) %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
arrange(desc(Profit)) %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
arrange(desc(IngresosOperacionales_2018)) %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
arrange(desc(IngresosOperacionales_2018)) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
arrange(desc(Profit)) %>%
.groups = 'drop')
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018) %>%
arrange(desc(Profit)))
profitTablePerRegion_2018 <- arrange(desc(profitTablePerRegion_2018$Profit)) %>%
profitTablePerRegion_2018
profitTablePerRegion_2018 <- regionsProfit_2018 %>%
group_by(Region) %>%
summarise(Profit = sum(IngresosOperacionales_2018),
.groups = 'drop')
profitTablePerRegion_2018
profitTablePerRegion_2018
profitTablePerRegion_2018
profitTablePerRegion_2018[order(profitTablePerRegion_2018$Profit)]
profitTablePerRegion_2018[order(profitTablePerRegion_2018$Profit,decreasing = TRUE)]
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
tapply(IngresosOperacionales_2018, Macrosector, mean,na.rm = TRUE)
round(prop.table(table(Macrosector, Departamento),2),2)
round(prop.table(table(Macrosector, Region),2),2)
plot(NivelDeIngresos, NivelDeActivos, main="Activos VS Ingresos",
xlab="Nivel de ingresos ", ylab="Nivel de Activos ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red")
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
View(mainMacrosectorProfit_2018)
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=3,main="Matriz de Dispersión, Histograma y Correlación")
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=2,main="Matriz de Dispersión, Histograma y Correlación")
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=19,main="Matriz de Dispersión, Histograma y Correlación")
plot(NivelDeIngresos, NivelDeActivos, main="Activos VS Ingresos",
xlab="Nivel de ingresos ", ylab="Nivel de Activos ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red")
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue")
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=19,main="Activos VS Ingresos - Matriz de Dispersión, Histograma y Correlación")
# 10 ¿Análisis nivel de ingresos 2018?
summary(NivelDeIngresos)
summary(NivelDeActivos)
boxplot(NivelDeIngresos~Macrosector,
border=c("#01d564", "#ed1c24"),
main = "Nivel de ingresos por macrosector",
cex.lab=1,
cex.axis=0.4,
xlab = "Macrosector",
ylab = "Nivel de ingresos")
text(c(1:nlevels(Region)), labels=paste("n = ",table(Region),sep=":"))
mainMacrosectorProfit_2017
pie3D(profit, labels = pieProfitpercent_2018,
radius = 0.75,
main = "Top 10 empresas - Ingresos operacionales 2018",
col= hcl.colors(length(profit), "Spectral"),
labelcol = "black",
labelcex = 0.55)
legend("top", c(labels),
cex = 0.2, fill = rainbow(length(profit)))
barplot(profitTablePerRegion_2018$Profit,
main = "Ingresos operacionales por región",
col=c("#ffc502","#ed1f38","#2d143b","#22a1f2","#fa6720","#5457ff","#3ffe87"),
ylab="Total Ingresos",
xlab="Región",
font.axis=1.2,
font.main=2,
legend.text = c(profitTablePerRegion_2018$Region))
plot(NivelDeIngresos, NivelDeActivos, main="Activos VS Ingresos",
xlab="Nivel de ingresos ", ylab="Nivel de Activos ", pch=20)
abline(lm(NivelDeActivos~NivelDeIngresos), col="red")
lines(lowess(NivelDeActivos,NivelDeIngresos), col="blue")
sunflowerplot(businessDataFrame$NivelDeIngresos,businessDataFrame$NivelDeActivos,
col = rgb(0, 0, 0, alpha = 0.05),
main = "Activos VS Ingresos")
matriz<-select(businessDataFrame,NivelDeIngresos, NivelDeActivos)
pairs.panels(a, pch=19,main="Activos VS Ingresos - Matriz de Dispersión, Histograma y Correlación")
